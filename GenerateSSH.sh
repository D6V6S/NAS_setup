
#Windows
#https://learn.microsoft.com/en-us/windows-server/administration/openssh/openssh_keymanagement

#PowerShell

cd ~/.ssh

# Generate SSH keys

ssh-keygen -t ed25519 -C "your_email@example.com" -f GitSSH

# By default the ssh-agent service is disabled. Configure it to start automatically.
# Make sure you're running as an Administrator.
Get-Service ssh-agent | Set-Service -StartupType Automatic

# Start the service
Start-Service ssh-agent

# This should return a status of Running
Get-Service ssh-agent

# Now load your key files into ssh-agent
ssh-add GitSSH


Mac





NAS


#Open the SSH configuration file /etc/ssh/sshd_config using a text editor and Ancomment (add) the following lines

sudo vim /etc/ssh/sshd_config

aucomment line 40
    PubkeyAuthentication yes

aucomment line 44   
    AuthorizedKeysFile      .ssh/authorized_keys


cd ~/.ssh

# Copy the public key generated by windows to the remote Linux server's authorized_keys file. 
# You can do this by copying the contents of the public key file on your Windows machine 
# (which is typically named something like id_rsa.pub or id_ed25519.pub) 
# and appending it to the end of the ~/.ssh/authorized_keys file on the remote Linux server. 
# If the ~/.ssh directory or the authorized_keys file doesn't exist, 
# you can create them using the following commands:

mkdir ~/.ssh
touch ~/.ssh/authorized_keys

# Set the correct permissions on the authorized_keys file on the remote Linux server by entering the following command
chmod 600 ~/.ssh/authorized_keys

# Connect to server and
ssh vitya.demichev@192.168.0.10 -p56522